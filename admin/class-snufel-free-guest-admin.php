<?php

/**
 * The admin-specific functionality of the plugin.
 *
 * @link       https://snufel.com/team
 * @since      1.0.0
 *
 * @package    Snufel_Free_Guest
 * @subpackage Snufel_Free_Guest/admin
 */

/**
 * The admin-specific functionality of the plugin.
 *
 * Defines the plugin name, version, and two examples hooks for how to
 * enqueue the admin-specific stylesheet and JavaScript.
 *
 * @package    Snufel_Free_Guest
 * @subpackage Snufel_Free_Guest/admin
 * @author     Snufel <contact@snufel.com>
 */
class Snufel_Free_Guest_Admin {

	/**
	 * The ID of this plugin.
	 *
	 * @since    1.0.0
	 * @access   private
	 * @var      string    $plugin_name    The ID of this plugin.
	 */
	private $plugin_name;

	/**
	 * The version of this plugin.
	 *
	 * @since    1.0.0
	 * @access   private
	 * @var      string    $version    The current version of this plugin.
	 */
	private $version;

	/**
	 * Initialize the class and set its properties.
	 *
	 * @since    1.0.0
	 * @param      string    $plugin_name       The name of this plugin.
	 * @param      string    $version    The version of this plugin.
	 */
	public function __construct( $plugin_name, $version ) {

		$this->plugin_name = $plugin_name;
		$this->version = $version;

	}

	/**
	 * Register the stylesheets for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_styles() {

		/**
		 * This function is provided for demonstration purposes only.
		 *
		 * An instance of this class should be passed to the run() function
		 * defined in Snufel_Free_Guest_Loader as all of the hooks are defined
		 * in that particular class.
		 *
		 * The Snufel_Free_Guest_Loader will then create the relationship
		 * between the defined hooks and the functions defined in this
		 * class.
		 */

		wp_enqueue_style( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'css/snufel-free-guest-admin.css', array(), $this->version, 'all' );

	}

	/**
	 * Register the JavaScript for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_scripts() {

		/**
		 * This function is provided for demonstration purposes only.
		 *
		 * An instance of this class should be passed to the run() function
		 * defined in Snufel_Free_Guest_Loader as all of the hooks are defined
		 * in that particular class.
		 *
		 * The Snufel_Free_Guest_Loader will then create the relationship
		 * between the defined hooks and the functions defined in this
		 * class.
		 */

		wp_enqueue_script( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'js/snufel-free-guest-admin.js', array( 'jquery' ), $this->version, false );

	}

}



/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class SnufelFreeGuestPostSettings {
	private $snufel_free_guest_post_settings_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'snufel_free_guest_post_settings_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'snufel_free_guest_post_settings_page_init' ) );
	}

	public function snufel_free_guest_post_settings_add_plugin_page() {
		add_options_page(
			'Snufel Free Guest Post Settings', // page_title
			'Snufel Free Guest Post Settings', // menu_title
			'manage_options', // capability
			'snufel-free-guest-post-settings', // menu_slug
			array( $this, 'snufel_free_guest_post_settings_create_admin_page' ) // function
		);
	}

	public function snufel_free_guest_post_settings_create_admin_page() {
		$this->snufel_free_guest_post_settings_options = get_option( 'snufel_free_guest_post_settings_option_name' ); ?>

		<div class="wrap">
			<h2>Snufel Free Guest Post Settings</h2>
			<p>Configure settings here to your preference.</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'snufel_free_guest_post_settings_option_group' );
					do_settings_sections( 'snufel-free-guest-post-settings-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function snufel_free_guest_post_settings_page_init() {
		register_setting(
			'snufel_free_guest_post_settings_option_group', // option_group
			'snufel_free_guest_post_settings_option_name', // option_name
			array( $this, 'snufel_free_guest_post_settings_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'snufel_free_guest_post_settings_setting_section', // id
			'Settings', // title
			array( $this, 'snufel_free_guest_post_settings_section_info' ), // callback
			'snufel-free-guest-post-settings-admin' // page
		);

		add_settings_field(
			'what_is_the_accepted_minimum_words_0', // id
			'What is the accepted minimum words?', // title
			array( $this, 'what_is_the_accepted_minimum_words_0_callback' ), // callback
			'snufel-free-guest-post-settings-admin', // page
			'snufel_free_guest_post_settings_setting_section' // section
		);

		add_settings_field(
			'instructions_to_guest_1', // id
			'Instructions to guest', // title
			array( $this, 'instructions_to_guest_1_callback' ), // callback
			'snufel-free-guest-post-settings-admin', // page
			'snufel_free_guest_post_settings_setting_section' // section
		);

		add_settings_field(
			'posts_will_be_2', // id
			'Posts will be', // title
			array( $this, 'posts_will_be_2_callback' ), // callback
			'snufel-free-guest-post-settings-admin', // page
			'snufel_free_guest_post_settings_setting_section' // section
		);

		add_settings_field(
			'email_to_guest_when_published_3', // id
			'Email to guest when published?', // title
			array( $this, 'email_to_guest_when_published_3_callback' ), // callback
			'snufel-free-guest-post-settings-admin', // page
			'snufel_free_guest_post_settings_setting_section' // section
		);

		add_settings_field(
			'enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4', // id
			'Enter the emails that will be notified when a guest post is  submitted (separated by commas)', // title
			array( $this, 'enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4_callback' ), // callback
			'snufel-free-guest-post-settings-admin', // page
			'snufel_free_guest_post_settings_setting_section' // section
		);
	}

	public function snufel_free_guest_post_settings_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['what_is_the_accepted_minimum_words_0'] ) ) {
			$sanitary_values['what_is_the_accepted_minimum_words_0'] = $input['what_is_the_accepted_minimum_words_0'];
		}

		if ( isset( $input['instructions_to_guest_1'] ) ) {
			$sanitary_values['instructions_to_guest_1'] = esc_textarea( $input['instructions_to_guest_1'] );
		}

		if ( isset( $input['posts_will_be_2'] ) ) {
			$sanitary_values['posts_will_be_2'] = $input['posts_will_be_2'];
		}

		if ( isset( $input['email_to_guest_when_published_3'] ) ) {
			$sanitary_values['email_to_guest_when_published_3'] = $input['email_to_guest_when_published_3'];
		}

		if ( isset( $input['enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4'] ) ) {
			$sanitary_values['enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4'] = sanitize_text_field( $input['enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4'] );
		}

		return $sanitary_values;
	}

	public function snufel_free_guest_post_settings_section_info() {
		
	}

	public function what_is_the_accepted_minimum_words_0_callback() {
		?> <select name="snufel_free_guest_post_settings_option_name[what_is_the_accepted_minimum_words_0]" id="what_is_the_accepted_minimum_words_0">
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '100') ? 'selected' : '' ; ?>
			<option value="100" <?php echo $selected; ?>>100 words</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '300') ? 'selected' : '' ; ?>
			<option value="300" <?php echo $selected; ?>>300 words</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '500') ? 'selected' : '' ; ?>
			<option value="500" <?php echo $selected; ?>>500 words</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '700') ? 'selected' : '' ; ?>
			<option value="700" <?php echo $selected; ?>>700 words</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '1000') ? 'selected' : '' ; ?>
			<option value="1000" <?php echo $selected; ?>>1000 words</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '1200') ? 'selected' : '' ; ?>
			<option value="1200" <?php echo $selected; ?>>1200 words</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '1500') ? 'selected' : '' ; ?>
			<option value="1500" <?php echo $selected; ?>>1500 words</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] ) && $this->snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0'] === '2000') ? 'selected' : '' ; ?>
			<option value="2000" <?php echo $selected; ?>>2000 words</option>
		</select> <?php
	}

	public function instructions_to_guest_1_callback() {
		printf(
			'<textarea class="large-text" rows="5" name="snufel_free_guest_post_settings_option_name[instructions_to_guest_1]" id="instructions_to_guest_1">%s</textarea>',
			isset( $this->snufel_free_guest_post_settings_options['instructions_to_guest_1'] ) ? esc_attr( $this->snufel_free_guest_post_settings_options['instructions_to_guest_1']) : ''
		);
	}

	public function posts_will_be_2_callback() {
		?> <select name="snufel_free_guest_post_settings_option_name[posts_will_be_2]" id="posts_will_be_2">
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['posts_will_be_2'] ) && $this->snufel_free_guest_post_settings_options['posts_will_be_2'] === 'publish') ? 'selected' : '' ; ?>
			<option value="publish" <?php echo $selected; ?>>Published automatically</option>
			<?php $selected = (isset( $this->snufel_free_guest_post_settings_options['posts_will_be_2'] ) && $this->snufel_free_guest_post_settings_options['posts_will_be_2'] === 'draft') ? 'selected' : '' ; ?>
			<option value="draft" <?php echo $selected; ?>>Saved as draft for review</option>
		</select> <?php
	}

	public function email_to_guest_when_published_3_callback() {
		?> <fieldset><?php $checked = ( isset( $this->snufel_free_guest_post_settings_options['email_to_guest_when_published_3'] ) && $this->snufel_free_guest_post_settings_options['email_to_guest_when_published_3'] === 'yes' ) ? 'checked' : '' ; ?>
		<label for="email_to_guest_when_published_3-0"><input type="radio" name="snufel_free_guest_post_settings_option_name[email_to_guest_when_published_3]" id="email_to_guest_when_published_3-0" value="yes" <?php echo $checked; ?>> Yes, send email upon published</label><br>
		<?php $checked = ( isset( $this->snufel_free_guest_post_settings_options['email_to_guest_when_published_3'] ) && $this->snufel_free_guest_post_settings_options['email_to_guest_when_published_3'] === 'no' ) ? 'checked' : '' ; ?>
		<label for="email_to_guest_when_published_3-1"><input type="radio" name="snufel_free_guest_post_settings_option_name[email_to_guest_when_published_3]" id="email_to_guest_when_published_3-1" value="no" <?php echo $checked; ?>> No, just publish</label></fieldset> <?php
	}

	public function enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4_callback() {
		printf(
			'<input class="regular-text" type="text" name="snufel_free_guest_post_settings_option_name[enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4]" id="enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4" value="%s">',
			isset( $this->snufel_free_guest_post_settings_options['enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4'] ) ? esc_attr( $this->snufel_free_guest_post_settings_options['enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4']) : ''
		);
	}

}
if ( is_admin() )
	$snufel_free_guest_post_settings = new SnufelFreeGuestPostSettings();

/* 
 * Retrieve this value with:
 * $snufel_free_guest_post_settings_options = get_option( 'snufel_free_guest_post_settings_option_name' ); // Array of All Options
 * $minimumwords = $snufel_free_guest_post_settings_options['what_is_the_accepted_minimum_words_0']; // What is the accepted minimum words?
 * $instructions_to_guest = $snufel_free_guest_post_settings_options['instructions_to_guest_1']; // Instructions to guest
 * $autopublish = $snufel_free_guest_post_settings_options['posts_will_be_2']; // Posts will be
 * $email_to_guest_when_published = $snufel_free_guest_post_settings_options['email_to_guest_when_published_3']; // Email to guest when published?
 * $notify_emails = $snufel_free_guest_post_settings_options['enter_the_emails_that_will_be_notified_when_a_guest_post_is_submitted_separated_by_commas_4']; // Enter the emails that will be notified when a guest post is  submitted (separated by commas)
 */
